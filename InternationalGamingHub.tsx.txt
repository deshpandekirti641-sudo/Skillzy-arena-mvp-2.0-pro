'use client';

import React, { useState } from 'react';
import { useLanguage } from '../hooks/useLanguageSystem';
import { useMultiCurrency } from '../hooks/useMultiCurrency';
import LanguageSelector from './LanguageSelector';
import CurrencySelector from './CurrencySelector';
import InternationalPaymentSystem from './InternationalPaymentSystem';

interface Game {
  id: string;
  name: string;
  icon: string;
  description: string;
  players: number;
  difficulty: 'Easy' | 'Medium' | 'Hard';
}

interface InternationalGamingHubProps {
  userBalance: number;
  onStartGame: (gameId: string) => void;
  onDeposit: () => void;
  onWithdraw: () => void;
}

const InternationalGamingHub: React.FC<InternationalGamingHubProps> = ({
  userBalance,
  onStartGame,
  onDeposit,
  onWithdraw
}) => {
  const { t, currentLanguage } = useLanguage();
  const { 
    formatAmount, 
    convertToCurrentCurrency, 
    getCurrentCurrencyInfo 
  } = useMultiCurrency();
  
  const [activeTab, setActiveTab] = useState<'games' | 'wallet' | 'profile'>('games');
  const [showPayment, setShowPayment] = useState<{show: boolean; isDeposit: boolean}>({
    show: false,
    isDeposit: true
  });

  const currencyInfo = getCurrentCurrencyInfo();
  
  // Base amounts in INR converted to current currency
  const baseBetAmount = 10; // ‚Çπ10 base bet
  const betAmount = convertToCurrentCurrency(baseBetAmount);
  const winnerAmount = convertToCurrentCurrency(16); // ‚Çπ16 winner amount
  const displayBalance = convertToCurrentCurrency(userBalance);

  const games: Game[] = [
    {
      id: 'chess',
      name: t('chess'),
      icon: '‚ôî',
      description: currentLanguage === 'en' ? 'Strategic chess battles' : 
                  currentLanguage === 'hi' ? '‡§∞‡§£‡§®‡•Ä‡§§‡§ø‡§ï ‡§∂‡§§‡§∞‡§Ç‡§ú ‡§Ø‡•Å‡§¶‡•ç‡§ß' :
                  currentLanguage === 'es' ? 'Batallas estrat√©gicas de ajedrez' :
                  currentLanguage === 'fr' ? 'Batailles d\'√©checs strat√©giques' :
                  currentLanguage === 'de' ? 'Strategische Schachk√§mpfe' :
                  currentLanguage === 'zh' ? 'ÊàòÁï•Ë±°Ê£ãÂØπÊàò' :
                  currentLanguage === 'ar' ? 'ŸÖÿπÿßÿ±ŸÉ ÿßŸÑÿ¥ÿ∑ÿ±ŸÜÿ¨ ÿßŸÑÿßÿ≥ÿ™ÿ±ÿßÿ™Ÿäÿ¨Ÿäÿ©' :
                  currentLanguage === 'pt' ? 'Batalhas estrat√©gicas de xadrez' :
                  currentLanguage === 'ru' ? '–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —à–∞—Ö–º–∞—Ç–Ω—ã–µ –±–∏—Ç–≤—ã' :
                  currentLanguage === 'ja' ? 'Êà¶Áï•ÁöÑ„ÉÅ„Çß„ÇπÂØæÊà¶' :
                  currentLanguage === 'ko' ? 'Ï†ÑÎûµÏ†Å Ï≤¥Ïä§ Î∞∞ÌãÄ' : 'Strategic chess battles',
      players: 1247,
      difficulty: 'Hard'
    },
    {
      id: 'snakeLadder',
      name: t('snakeLadder'),
      icon: 'üêç',
      description: currentLanguage === 'en' ? 'Classic board game fun' : 
                  currentLanguage === 'hi' ? '‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§¨‡•ã‡§∞‡•ç‡§° ‡§ó‡•á‡§Æ ‡§Æ‡§ú‡§º‡§æ' :
                  currentLanguage === 'es' ? 'Diversi√≥n cl√°sica de juego de mesa' :
                  currentLanguage === 'fr' ? 'Amusement classique de jeu de soci√©t√©' :
                  currentLanguage === 'de' ? 'Klassischer Brettspielspa√ü' :
                  currentLanguage === 'zh' ? 'ÁªèÂÖ∏Ê°åÊ∏∏‰πêË∂£' :
                  currentLanguage === 'ar' ? 'ŸÖÿ™ÿπÿ© ŸÑÿπÿ®ÿ© ÿßŸÑŸÑŸàÿ≠ ÿßŸÑŸÉŸÑÿßÿ≥ŸäŸÉŸäÿ©' :
                  currentLanguage === 'pt' ? 'Divers√£o cl√°ssica de jogo de tabuleiro' :
                  currentLanguage === 'ru' ? '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –≤–µ—Å–µ–ª—å–µ –Ω–∞—Å—Ç–æ–ª—å–Ω–æ–π –∏–≥—Ä—ã' :
                  currentLanguage === 'ja' ? '„ÇØ„É©„Ç∑„ÉÉ„ÇØ„Éú„Éº„Éâ„Ç≤„Éº„É†„ÅÆÊ•Ω„Åó„Åï' :
                  currentLanguage === 'ko' ? 'ÌÅ¥ÎûòÏãù Î≥¥ÎìúÍ≤åÏûÑ Ïû¨ÎØ∏' : 'Classic board game fun',
      players: 2156,
      difficulty: 'Easy'
    },
    {
      id: 'carrom',
      name: t('carrom'),
      icon: 'üéØ',
      description: currentLanguage === 'en' ? 'Precision skill game' : 
                  currentLanguage === 'hi' ? '‡§∏‡§ü‡•Ä‡§ï ‡§ï‡•å‡§∂‡§≤ ‡§ó‡•á‡§Æ' :
                  currentLanguage === 'es' ? 'Juego de habilidad de precisi√≥n' :
                  currentLanguage === 'fr' ? 'Jeu d\'adresse de pr√©cision' :
                  currentLanguage === 'de' ? 'Pr√§zisions-Geschicklichkeitsspiel' :
                  currentLanguage === 'zh' ? 'Á≤æÁ°ÆÊäÄÂ∑ßÊ∏∏Êàè' :
                  currentLanguage === 'ar' ? 'ŸÑÿπÿ®ÿ© ŸÖŸáÿßÿ±ÿ© ÿßŸÑÿØŸÇÿ©' :
                  currentLanguage === 'pt' ? 'Jogo de habilidade de precis√£o' :
                  currentLanguage === 'ru' ? '–ò–≥—Ä–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞' :
                  currentLanguage === 'ja' ? 'Á≤æÂØÜ„Çπ„Ç≠„É´„Ç≤„Éº„É†' :
                  currentLanguage === 'ko' ? 'Ï†ïÎ∞Ä Ïä§ÌÇ¨ Í≤åÏûÑ' : 'Precision skill game',
      players: 3421,
      difficulty: 'Medium'
    }
  ];

  const handlePaymentComplete = (transaction: any): void => {
    setShowPayment({show: false, isDeposit: true});
    // Handle transaction completion
    console.log('Payment completed:', transaction);
  };

  const getDifficultyColor = (difficulty: string): string => {
    switch (difficulty) {
      case 'Easy': return 'text-green-400';
      case 'Medium': return 'text-yellow-400';
      case 'Hard': return 'text-red-400';
      default: return 'text-gray-400';
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900">
      {/* Header with Language and Currency Selectors */}
      <div className="bg-black/20 backdrop-blur-sm border-b border-white/10">
        <div className="max-w-6xl mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="w-10 h-10 bg-gradient-to-r from-purple-500 to-blue-500 rounded-xl flex items-center justify-center">
                <span className="text-white font-bold text-lg">S</span>
              </div>
              <h1 className="text-2xl font-bold text-white">Skillzy Arena</h1>
            </div>
            
            <div className="flex items-center gap-3">
              <LanguageSelector compact />
              <CurrencySelector compact />
            </div>
          </div>
        </div>
      </div>

      {/* Balance Section */}
      <div className="max-w-6xl mx-auto px-4 py-6">
        <div className="bg-black/30 backdrop-blur rounded-2xl p-6 border border-white/20">
          <div className="flex items-center justify-between">
            <div>
              <h2 className="text-gray-300 text-sm">{t('wallet')}</h2>
              <div className="text-3xl font-bold text-white flex items-center gap-2">
                <span className="text-2xl">{currencyInfo.flag}</span>
                {formatAmount(displayBalance)}
              </div>
              <p className="text-gray-400 text-sm mt-1">
                {currencyInfo.name} ‚Ä¢ {currencyInfo.country}
              </p>
            </div>
            
            <div className="flex gap-3">
              <button
                onClick={() => setShowPayment({show: true, isDeposit: true})}
                className="bg-green-600 hover:bg-green-700 px-6 py-3 rounded-lg text-white font-medium transition-colors flex items-center gap-2"
              >
                <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                </svg>
                {t('deposit')}
              </button>
              
              <button
                onClick={() => setShowPayment({show: true, isDeposit: false})}
                className="bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-lg text-white font-medium transition-colors flex items-center gap-2"
              >
                <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3a2 2 0 012-2h4a2 2 0 012 2v4m-6 4v10h6V11H8z" />
                </svg>
                {t('withdraw')}
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* Navigation Tabs */}
      <div className="max-w-6xl mx-auto px-4">
        <div className="flex space-x-1 bg-black/20 rounded-xl p-1 mb-6">
          {[
            {id: 'games', label: currentLanguage === 'en' ? 'Games' : currentLanguage === 'hi' ? '‡§ñ‡•á‡§≤' : currentLanguage === 'es' ? 'Juegos' : currentLanguage === 'fr' ? 'Jeux' : 'Games', icon: 'üéÆ'},
            {id: 'wallet', label: t('wallet'), icon: 'üí∞'},
            {id: 'profile', label: currentLanguage === 'en' ? 'Profile' : currentLanguage === 'hi' ? '‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤' : currentLanguage === 'es' ? 'Perfil' : currentLanguage === 'fr' ? 'Profil' : 'Profile', icon: 'üë§'}
          ].map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id as any)}
              className={`flex-1 flex items-center justify-center gap-2 py-3 px-6 rounded-lg font-medium transition-all ${
                activeTab === tab.id
                  ? 'bg-white text-gray-900'
                  : 'text-white hover:bg-white/10'
              }`}
            >
              <span>{tab.icon}</span>
              {tab.label}
            </button>
          ))}
        </div>
      </div>

      {/* Games Tab */}
      {activeTab === 'games' && (
        <div className="max-w-6xl mx-auto px-4 pb-8">
          {/* Betting Info */}
          <div className="bg-gradient-to-r from-yellow-600/20 to-orange-600/20 backdrop-blur rounded-xl p-4 mb-6 border border-yellow-500/30">
            <div className="flex items-center gap-3">
              <span className="text-2xl">üèÜ</span>
              <div>
                <h3 className="text-white font-semibold">
                  {currentLanguage === 'en' ? 'Win Real Money!' : 
                   currentLanguage === 'hi' ? '‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§™‡•à‡§∏‡•á ‡§ú‡•Ä‡§§‡•á‡§Ç!' :
                   currentLanguage === 'es' ? '¬°Gana dinero real!' :
                   currentLanguage === 'fr' ? 'Gagnez de l\'argent r√©el!' :
                   'Win Real Money!'}
                </h3>
                <p className="text-gray-300 text-sm">
                  {currentLanguage === 'en' ? `Bet ${formatAmount(betAmount)} ‚Ä¢ Winner gets ${formatAmount(winnerAmount)}` :
                   currentLanguage === 'hi' ? `‡§¶‡§æ‡§Ç‡§µ ${formatAmount(betAmount)} ‚Ä¢ ‡§µ‡§ø‡§ú‡•á‡§§‡§æ ‡§ï‡•ã ‡§Æ‡§ø‡§≤‡§§‡§æ ‡§π‡•à ${formatAmount(winnerAmount)}` :
                   currentLanguage === 'es' ? `Apuesta ${formatAmount(betAmount)} ‚Ä¢ El ganador recibe ${formatAmount(winnerAmount)}` :
                   currentLanguage === 'fr' ? `Pari ${formatAmount(betAmount)} ‚Ä¢ Le gagnant re√ßoit ${formatAmount(winnerAmount)}` :
                   `Bet ${formatAmount(betAmount)} ‚Ä¢ Winner gets ${formatAmount(winnerAmount)}`}
                </p>
              </div>
            </div>
          </div>

          {/* Games Grid */}
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {games.map((game) => (
              <div key={game.id} className="bg-black/30 backdrop-blur rounded-2xl p-6 border border-white/20 hover:border-white/40 transition-all group">
                <div className="text-center mb-4">
                  <div className="text-6xl mb-3">{game.icon}</div>
                  <h3 className="text-xl font-bold text-white mb-2">{game.name}</h3>
                  <p className="text-gray-400 text-sm">{game.description}</p>
                </div>

                <div className="flex items-center justify-between mb-4 text-sm">
                  <div className="flex items-center gap-2">
                    <span className="text-gray-400">Players:</span>
                    <span className="text-white font-medium">{game.players.toLocaleString()}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <span className="text-gray-400">Level:</span>
                    <span className={`font-medium ${getDifficultyColor(game.difficulty)}`}>
                      {game.difficulty}
                    </span>
                  </div>
                </div>

                <button
                  onClick={() => onStartGame(game.id)}
                  className="w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 py-3 rounded-lg text-white font-medium transition-all group-hover:shadow-lg group-hover:shadow-purple-500/25"
                >
                  {t('playNow')} ‚Ä¢ {formatAmount(betAmount)}
                </button>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* Wallet Tab */}
      {activeTab === 'wallet' && (
        <div className="max-w-4xl mx-auto px-4 pb-8">
          <div className="bg-black/30 backdrop-blur rounded-2xl p-8 border border-white/20">
            <h3 className="text-2xl font-bold text-white mb-6">
              {currentLanguage === 'en' ? 'Wallet Management' :
               currentLanguage === 'hi' ? '‡§µ‡•â‡§≤‡•á‡§ü ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§®' :
               currentLanguage === 'es' ? 'Gesti√≥n de Cartera' :
               currentLanguage === 'fr' ? 'Gestion du Portefeuille' :
               'Wallet Management'}
            </h3>

            <div className="grid md:grid-cols-2 gap-8">
              <div className="space-y-4">
                <h4 className="text-lg font-semibold text-white">
                  {currentLanguage === 'en' ? 'Available Payment Methods' :
                   currentLanguage === 'hi' ? '‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§µ‡§ø‡§ß‡§ø‡§Ø‡§æ‡§Ç' :
                   currentLanguage === 'es' ? 'M√©todos de Pago Disponibles' :
                   currentLanguage === 'fr' ? 'M√©thodes de Paiement Disponibles' :
                   'Available Payment Methods'}
                </h4>
                
                <div className="space-y-2">
                  {/* Display available payment methods for current currency */}
                  {getCurrentCurrencyInfo().paymentMethods.map((method, index) => (
                    <div key={index} className="flex items-center gap-3 p-3 bg-gray-800/50 rounded-lg">
                      <span className="text-green-400">‚úì</span>
                      <span className="text-white">{method}</span>
                    </div>
                  ))}
                </div>
              </div>

              <div className="space-y-4">
                <h4 className="text-lg font-semibold text-white">
                  {currentLanguage === 'en' ? 'Transaction History' :
                   currentLanguage === 'hi' ? '‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§á‡§§‡§ø‡§π‡§æ‡§∏' :
                   currentLanguage === 'es' ? 'Historial de Transacciones' :
                   currentLanguage === 'fr' ? 'Historique des Transactions' :
                   'Transaction History'}
                </h4>
                
                <div className="text-center py-8 text-gray-400">
                  {currentLanguage === 'en' ? 'No transactions yet' :
                   currentLanguage === 'hi' ? '‡§Ö‡§≠‡•Ä ‡§§‡§ï ‡§ï‡•ã‡§à ‡§≤‡•á‡§®‡§¶‡•á‡§® ‡§®‡§π‡•Ä‡§Ç' :
                   currentLanguage === 'es' ? 'A√∫n no hay transacciones' :
                   currentLanguage === 'fr' ? 'Aucune transaction pour le moment' :
                   'No transactions yet'}
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Profile Tab */}
      {activeTab === 'profile' && (
        <div className="max-w-4xl mx-auto px-4 pb-8">
          <div className="bg-black/30 backdrop-blur rounded-2xl p-8 border border-white/20">
            <h3 className="text-2xl font-bold text-white mb-6">
              {currentLanguage === 'en' ? 'Profile Settings' :
               currentLanguage === 'hi' ? '‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤ ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏' :
               currentLanguage === 'es' ? 'Configuraci√≥n del Perfil' :
               currentLanguage === 'fr' ? 'Param√®tres du Profil' :
               'Profile Settings'}
            </h3>

            <div className="grid md:grid-cols-2 gap-8">
              <div className="space-y-6">
                <div>
                  <h4 className="text-lg font-semibold text-white mb-4">
                    {currentLanguage === 'en' ? 'Language Preferences' :
                     currentLanguage === 'hi' ? '‡§≠‡§æ‡§∑‡§æ ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï‡§§‡§æ‡§è‡§Ç' :
                     currentLanguage === 'es' ? 'Preferencias de Idioma' :
                     currentLanguage === 'fr' ? 'Pr√©f√©rences Linguistiques' :
                     'Language Preferences'}
                  </h4>
                  <LanguageSelector showFlags={true} />
                </div>

                <div>
                  <h4 className="text-lg font-semibold text-white mb-4">
                    {currentLanguage === 'en' ? 'Currency Settings' :
                     currentLanguage === 'hi' ? '‡§Æ‡•Å‡§¶‡•ç‡§∞‡§æ ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏' :
                     currentLanguage === 'es' ? 'Configuraci√≥n de Moneda' :
                     currentLanguage === 'fr' ? 'Param√®tres de Devise' :
                     'Currency Settings'}
                  </h4>
                  <CurrencySelector showFlags={true} />
                </div>
              </div>

              <div className="space-y-4">
                <h4 className="text-lg font-semibold text-white">
                  {currentLanguage === 'en' ? 'Account Statistics' :
                   currentLanguage === 'hi' ? '‡§ñ‡§æ‡§§‡§æ ‡§Ü‡§Ç‡§ï‡§°‡§º‡•á' :
                   currentLanguage === 'es' ? 'Estad√≠sticas de Cuenta' :
                   currentLanguage === 'fr' ? 'Statistiques de Compte' :
                   'Account Statistics'}
                </h4>
                
                <div className="space-y-3">
                  <div className="flex justify-between p-3 bg-gray-800/50 rounded-lg">
                    <span className="text-gray-400">
                      {currentLanguage === 'en' ? 'Games Played' :
                       currentLanguage === 'hi' ? '‡§ñ‡•á‡§≤‡•á ‡§ó‡§è ‡§ñ‡•á‡§≤' :
                       currentLanguage === 'es' ? 'Juegos Jugados' :
                       currentLanguage === 'fr' ? 'Jeux Jou√©s' :
                       'Games Played'}
                    </span>
                    <span className="text-white font-medium">0</span>
                  </div>
                  <div className="flex justify-between p-3 bg-gray-800/50 rounded-lg">
                    <span className="text-gray-400">
                      {currentLanguage === 'en' ? 'Total Winnings' :
                       currentLanguage === 'hi' ? '‡§ï‡•Å‡§≤ ‡§ú‡•Ä‡§§' :
                       currentLanguage === 'es' ? 'Ganancias Totales' :
                       currentLanguage === 'fr' ? 'Gains Totaux' :
                       'Total Winnings'}
                    </span>
                    <span className="text-white font-medium">{formatAmount(0)}</span>
                  </div>
                  <div className="flex justify-between p-3 bg-gray-800/50 rounded-lg">
                    <span className="text-gray-400">
                      {currentLanguage === 'en' ? 'Win Rate' :
                       currentLanguage === 'hi' ? '‡§ú‡•Ä‡§§ ‡§¶‡§∞' :
                       currentLanguage === 'es' ? 'Tasa de Victorias' :
                       currentLanguage === 'fr' ? 'Taux de Victoire' :
                       'Win Rate'}
                    </span>
                    <span className="text-white font-medium">0%</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Payment System Modal */}
      {showPayment.show && (
        <InternationalPaymentSystem
          isDeposit={showPayment.isDeposit}
          onComplete={handlePaymentComplete}
          onCancel={() => setShowPayment({show: false, isDeposit: true})}
        />
      )}
    </div>
  );
};

export default InternationalGamingHub;